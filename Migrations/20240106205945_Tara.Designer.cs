// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proiectChioranAndrei.Data;

#nullable disable

namespace proiectChioranAndrei.Migrations
{
    [DbContext(typeof(proiectChioranAndreiContext))]
    [Migration("20240106205945_Tara")]
    partial class Tara
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("proiectChioranAndrei.Models.ObiectivTuristic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Numar")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrasID")
                        .HasColumnType("int");

                    b.Property<string>("Strada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefon")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrasID");

                    b.ToTable("ObiectivTuristic");
                });

            modelBuilder.Entity("proiectChioranAndrei.Models.Oras", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("NumeOras")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TaraID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TaraID");

                    b.ToTable("Oras");
                });

            modelBuilder.Entity("proiectChioranAndrei.Models.Tara", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("NumeTara")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tara");
                });

            modelBuilder.Entity("proiectChioranAndrei.Models.ObiectivTuristic", b =>
                {
                    b.HasOne("proiectChioranAndrei.Models.Oras", "Oras")
                        .WithMany("ObiectivTuristic")
                        .HasForeignKey("OrasID");

                    b.Navigation("Oras");
                });

            modelBuilder.Entity("proiectChioranAndrei.Models.Oras", b =>
                {
                    b.HasOne("proiectChioranAndrei.Models.Tara", "Tara")
                        .WithMany("Orase")
                        .HasForeignKey("TaraID");

                    b.Navigation("Tara");
                });

            modelBuilder.Entity("proiectChioranAndrei.Models.Oras", b =>
                {
                    b.Navigation("ObiectivTuristic");
                });

            modelBuilder.Entity("proiectChioranAndrei.Models.Tara", b =>
                {
                    b.Navigation("Orase");
                });
#pragma warning restore 612, 618
        }
    }
}
